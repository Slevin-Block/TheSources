/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheSourceArticle,
  TheSourceArticleInterface,
} from "../../contracts/TheSourceArticle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketPlaceAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalties",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_articleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyArticle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_articleId",
        type: "uint256",
      },
    ],
    name: "getArticle",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "authorName",
            type: "string",
          },
          {
            internalType: "address",
            name: "authorAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct TheSourceArticle.Article",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_articleId",
        type: "uint256",
      },
    ],
    name: "getArticleInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfArticles",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalties",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_authorName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_authorAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceInFinney",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "URI",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600060809081526003906200001a908262000385565b503480156200002857600080fd5b50604051620027a1380380620027a18339810160408190526200004b9162000451565b60408051602081019091526000815262000065816200019b565b506200007133620001ad565b6040805161010081018252600760c082019081526647656e6573697360c81b60e083015281528151602081810184526000808352818401929092528351908101845281815292820192909252606081018290526080810182905260a0810182905260088054600181018255925280519091829160069091027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3019081906200011a908262000385565b506020820151600182019062000131908262000385565b506040820151600282019062000148908262000385565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0909101516005909101556200019083620001ff565b50600755506200048d565b6002620001a9828262000385565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200020962000282565b6001600160a01b038116620002745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200027f81620001ad565b50565b6005546001600160a01b03163314620002de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200026b565b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200030b57607f821691505b6020821081036200032c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038057600081815260208120601f850160051c810160208610156200035b5750805b601f850160051c820191505b818110156200037c5782815560010162000367565b5050505b505050565b81516001600160401b03811115620003a157620003a1620002e0565b620003b981620003b28454620002f6565b8462000332565b602080601f831160018114620003f15760008415620003d85750858301515b600019600386901b1c1916600185901b1785556200037c565b600085815260208120601f198616915b82811015620004225788860151825594840194600190910190840162000401565b5085821015620004415787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600080604083850312156200046557600080fd5b82516001600160a01b03811681146200047d57600080fd5b6020939093015192949293505050565b612304806200049d6000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80638da5cb5b116100a2578063e985e9c511610071578063e985e9c514610255578063f053dc5c14610291578063f242432a1461029a578063f2fde38b146102ad578063f6b49df8146102c057600080fd5b80638da5cb5b146101d0578063a22cb465146101eb578063b0df9b83146101fe578063bd85d8671461023557600080fd5b80634e1273f4116100de5780634e1273f41461018d578063715018a6146101ad5780637e77300d146101b557806389da85d3146101c857600080fd5b8062fdd58e1461010f57806301ffc9a7146101355780630e89341c146101585780632eb2c2d614610178575b600080fd5b61012261011d3660046116ce565b6102d3565b6040519081526020015b60405180910390f35b61014861014336600461170e565b61036c565b604051901515815260200161012c565b61016b61016636600461172b565b6103bc565b60405161012c9190611794565b61018b6101863660046118f3565b61049c565b005b6101a061019b36600461199d565b6104e8565b60405161012c9190611aa3565b61018b610612565b61018b6101c3366004611ab6565b610626565b610122610698565b6005546040516001600160a01b03909116815260200161012c565b61018b6101f9366004611ae9565b6106a8565b61021161020c36600461172b565b6106b7565b6040805193845260208401929092526001600160a01b03169082015260600161012c565b61024861024336600461172b565b610784565b60405161012c9190611b25565b610148610263366004611bb0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61012260075481565b61018b6102a8366004611be3565b610a17565b61018b6102bb366004611c48565b610a5c565b6101226102ce366004611cac565b610ad5565b60006001600160a01b0383166103435760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061039d57506001600160e01b031982166303a24d0760e21b145b8061036657506301ffc9a760e01b6001600160e01b0319831614610366565b6000818152600460205260408120805460609291906103da90611d90565b80601f016020809104026020016040519081016040528092919081815260200182805461040690611d90565b80156104535780601f1061042857610100808354040283529160200191610453565b820191906000526020600020905b81548152906001019060200180831161043657829003601f168201915b5050505050905060008151116104715761046c83610cb6565b610495565b600381604051602001610485929190611dca565b6040516020818303038152906040525b9392505050565b6001600160a01b0385163314806104b857506104b88533610263565b6104d45760405162461bcd60e51b815260040161033a90611e51565b6104e18585858585610d4a565b5050505050565b6060815183511461054d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161033a565b6000835167ffffffffffffffff811115610569576105696117a7565b604051908082528060200260200182016040528015610592578160200160208202803683370190505b50905060005b845181101561060a576105dd8582815181106105b6576105b6611e9f565b60200260200101518583815181106105d0576105d0611e9f565b60200260200101516102d3565b8282815181106105ef576105ef611e9f565b602090810291909101015261060381611ecb565b9050610598565b509392505050565b61061a610f27565b6106246000610f81565b565b61062e610f27565b6000610639836106b7565b925050506106598185858560405180602001604052806000815250610a17565b816008848154811061066d5761066d611e9f565b9060005260206000209060060201600401600082825461068d9190611ee4565b909155505050505050565b60006106a360065490565b905090565b6106b3338383610fd3565b5050565b60008060008084116106db5760405162461bcd60e51b815260040161033a90611ef7565b60085484106106fc5760405162461bcd60e51b815260040161033a90611ef7565b6008848154811061070f5761070f611e9f565b9060005260206000209060060201600401546008858154811061073457610734611e9f565b9060005260206000209060060201600501546008868154811061075957610759611e9f565b600091825260209091206003600690920201015491945092506001600160a01b031690509193909250565b6107c66040518060c0016040528060608152602001606081526020016060815260200160006001600160a01b0316815260200160008152602001600081525090565b600082116107e65760405162461bcd60e51b815260040161033a90611ef7565b60085482106108075760405162461bcd60e51b815260040161033a90611ef7565b6008828154811061081a5761081a611e9f565b90600052602060002090600602016040518060c001604052908160008201805461084390611d90565b80601f016020809104026020016040519081016040528092919081815260200182805461086f90611d90565b80156108bc5780601f10610891576101008083540402835291602001916108bc565b820191906000526020600020905b81548152906001019060200180831161089f57829003601f168201915b505050505081526020016001820180546108d590611d90565b80601f016020809104026020016040519081016040528092919081815260200182805461090190611d90565b801561094e5780601f106109235761010080835404028352916020019161094e565b820191906000526020600020905b81548152906001019060200180831161093157829003601f168201915b5050505050815260200160028201805461096790611d90565b80601f016020809104026020016040519081016040528092919081815260200182805461099390611d90565b80156109e05780601f106109b5576101008083540402835291602001916109e0565b820191906000526020600020905b8154815290600101906020018083116109c357829003601f168201915b505050918352505060038201546001600160a01b031660208201526004820154604082015260059091015460609091015292915050565b6001600160a01b038516331480610a335750610a338533610263565b610a4f5760405162461bcd60e51b815260040161033a90611e51565b6104e185858585856110b3565b610a64610f27565b6001600160a01b038116610ac95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161033a565b610ad281610f81565b50565b6000610adf610f27565b610aed600680546001019055565b6000610af860065490565b90506000610b3e8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250601492506111dd915050565b905060086040518060c001604052808f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820185905260408051601f8e0183900483028101830182528d8152920191908d908d908190840183828082843760009201829052509385525050506001600160a01b038b16602080840191909152604083018b905260609092018990528354600181018555938152208151919260060201908190610c079082611f69565b5060208201516001820190610c1c9082611f69565b5060408201516002820190610c319082611f69565b5060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a082015181600501555050610c90878388604051806020016040528060008152506112e0565b610c9c87336001610fd3565b610ca682856113f4565b509b9a5050505050505050505050565b606060028054610cc590611d90565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf190611d90565b8015610d3e5780601f10610d1357610100808354040283529160200191610d3e565b820191906000526020600020905b815481529060010190602001808311610d2157829003601f168201915b50505050509050919050565b8151835114610dac5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161033a565b6001600160a01b038416610dd25760405162461bcd60e51b815260040161033a90612029565b3360005b8451811015610eb9576000858281518110610df357610df3611e9f565b602002602001015190506000858381518110610e1157610e11611e9f565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610e615760405162461bcd60e51b815260040161033a9061206e565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610e9e9084906120b8565b9250508190555050505080610eb290611ecb565b9050610dd6565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610f099291906120cb565b60405180910390a4610f1f818787878787611451565b505050505050565b6005546001600160a01b031633146106245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110465760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161033a565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166110d95760405162461bcd60e51b815260040161033a90612029565b3360006110e5856115ac565b905060006110f2856115ac565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156111355760405162461bcd60e51b815260040161033a9061206e565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906111729084906120b8565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111d2848a8a8a8a8a6115f7565b505050505050505050565b60606000839050828151116111f55783915050610366565b6000611202600385611ee4565b67ffffffffffffffff81111561121a5761121a6117a7565b6040519080825280601f01601f191660200182016040528015611244576020820181803683370190505b50905060005b611255600386611ee4565b8110156112b45782818151811061126e5761126e611e9f565b602001015160f81c60f81b82828151811061128b5761128b611e9f565b60200101906001600160f81b031916908160001a905350806112ac81611ecb565b91505061124a565b50806040516020016112c691906120f9565b60408051601f198184030181529190529250610366915050565b6001600160a01b0384166113405760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161033a565b33600061134c856115ac565b90506000611359856115ac565b90506000868152602081815260408083206001600160a01b038b1684529091528120805487929061138b9084906120b8565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46113eb836000898989896115f7565b50505050505050565b600082815260046020526040902061140c8282611f69565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b611438846103bc565b6040516114459190611794565b60405180910390a25050565b6001600160a01b0384163b15610f1f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906114959089908990889088908890600401612120565b6020604051808303816000875af19250505080156114d0575060408051601f3d908101601f191682019092526114cd9181019061217e565b60015b61157c576114dc61219b565b806308c379a00361151557506114f06121b7565b806114fb5750611517565b8060405162461bcd60e51b815260040161033a9190611794565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161033a565b6001600160e01b0319811663bc197c8160e01b146113eb5760405162461bcd60e51b815260040161033a90612241565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106115e6576115e6611e9f565b602090810291909101015292915050565b6001600160a01b0384163b15610f1f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061163b9089908990889088908890600401612289565b6020604051808303816000875af1925050508015611676575060408051601f3d908101601f191682019092526116739181019061217e565b60015b611682576114dc61219b565b6001600160e01b0319811663f23a6e6160e01b146113eb5760405162461bcd60e51b815260040161033a90612241565b80356001600160a01b03811681146116c957600080fd5b919050565b600080604083850312156116e157600080fd5b6116ea836116b2565b946020939093013593505050565b6001600160e01b031981168114610ad257600080fd5b60006020828403121561172057600080fd5b8135610495816116f8565b60006020828403121561173d57600080fd5b5035919050565b60005b8381101561175f578181015183820152602001611747565b50506000910152565b60008151808452611780816020860160208601611744565b601f01601f19169290920160200192915050565b6020815260006104956020830184611768565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156117e3576117e36117a7565b6040525050565b600067ffffffffffffffff821115611804576118046117a7565b5060051b60200190565b600082601f83011261181f57600080fd5b8135602061182c826117ea565b60405161183982826117bd565b83815260059390931b850182019282810191508684111561185957600080fd5b8286015b84811015611874578035835291830191830161185d565b509695505050505050565b600082601f83011261189057600080fd5b813567ffffffffffffffff8111156118aa576118aa6117a7565b6040516118c1601f8301601f1916602001826117bd565b8181528460208386010111156118d657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561190b57600080fd5b611914866116b2565b9450611922602087016116b2565b9350604086013567ffffffffffffffff8082111561193f57600080fd5b61194b89838a0161180e565b9450606088013591508082111561196157600080fd5b61196d89838a0161180e565b9350608088013591508082111561198357600080fd5b506119908882890161187f565b9150509295509295909350565b600080604083850312156119b057600080fd5b823567ffffffffffffffff808211156119c857600080fd5b818501915085601f8301126119dc57600080fd5b813560206119e9826117ea565b6040516119f682826117bd565b83815260059390931b8501820192828101915089841115611a1657600080fd5b948201945b83861015611a3b57611a2c866116b2565b82529482019490820190611a1b565b96505086013592505080821115611a5157600080fd5b50611a5e8582860161180e565b9150509250929050565b600081518084526020808501945080840160005b83811015611a9857815187529582019590820190600101611a7c565b509495945050505050565b6020815260006104956020830184611a68565b600080600060608486031215611acb57600080fd5b611ad4846116b2565b95602085013595506040909401359392505050565b60008060408385031215611afc57600080fd5b611b05836116b2565b915060208301358015158114611b1a57600080fd5b809150509250929050565b602081526000825160c06020840152611b4160e0840182611768565b90506020840151601f1980858403016040860152611b5f8383611768565b9250604086015191508085840301606086015250611b7d8282611768565b91505060018060a01b036060850151166080840152608084015160a084015260a084015160c08401528091505092915050565b60008060408385031215611bc357600080fd5b611bcc836116b2565b9150611bda602084016116b2565b90509250929050565b600080600080600060a08688031215611bfb57600080fd5b611c04866116b2565b9450611c12602087016116b2565b93506040860135925060608601359150608086013567ffffffffffffffff811115611c3c57600080fd5b6119908882890161187f565b600060208284031215611c5a57600080fd5b610495826116b2565b60008083601f840112611c7557600080fd5b50813567ffffffffffffffff811115611c8d57600080fd5b602083019150836020828501011115611ca557600080fd5b9250929050565b60008060008060008060008060008060e08b8d031215611ccb57600080fd5b8a3567ffffffffffffffff80821115611ce357600080fd5b611cef8e838f01611c63565b909c509a5060208d0135915080821115611d0857600080fd5b611d148e838f01611c63565b909a50985060408d0135915080821115611d2d57600080fd5b611d398e838f01611c63565b9098509650869150611d4d60608e016116b2565b955060808d0135945060a08d0135935060c08d0135915080821115611d7157600080fd5b50611d7e8d828e0161187f565b9150509295989b9194979a5092959850565b600181811c90821680611da457607f821691505b602082108103611dc457634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454611dd881611d90565b60018281168015611df05760018114611e0557611e34565b60ff1984168752821515830287019450611e34565b8860005260208060002060005b85811015611e2b5781548a820152908401908201611e12565b50505082870194505b505050508351611e48818360208801611744565b01949350505050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611edd57611edd611eb5565b5060010190565b8181038181111561036657610366611eb5565b6020808252600d908201526c092dcecc2d8d2c840d2dcc8caf609b1b604082015260600190565b601f821115611f6457600081815260208120601f850160051c81016020861015611f455750805b601f850160051c820191505b81811015610f1f57828155600101611f51565b505050565b815167ffffffffffffffff811115611f8357611f836117a7565b611f9781611f918454611d90565b84611f1e565b602080601f831160018114611fcc5760008415611fb45750858301515b600019600386901b1c1916600185901b178555610f1f565b600085815260208120601f198616915b82811015611ffb57888601518255948401946001909101908401611fdc565b50858210156120195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b8082018082111561036657610366611eb5565b6040815260006120de6040830185611a68565b82810360208401526120f08185611a68565b95945050505050565b6000825161210b818460208701611744565b6217171760e91b920191825250600301919050565b6001600160a01b0386811682528516602082015260a06040820181905260009061214c90830186611a68565b828103606084015261215e8186611a68565b905082810360808401526121728185611768565b98975050505050505050565b60006020828403121561219057600080fd5b8151610495816116f8565b600060033d11156121b45760046000803e5060005160e01c5b90565b600060443d10156121c55790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156121f557505050505090565b828501915081518181111561220d5750505050505090565b843d87010160208285010111156122275750505050505090565b612236602082860101876117bd565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906122c390830184611768565b97965050505050505056fea26469706673582212202f51f88f36517466464ce5cadd98443c0894140af7cb85b3d2c38f3c7c4041b664736f6c63430008120033";

type TheSourceArticleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheSourceArticleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheSourceArticle__factory extends ContractFactory {
  constructor(...args: TheSourceArticleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketPlaceAddr: PromiseOrValue<string>,
    _royalties: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheSourceArticle> {
    return super.deploy(
      _marketPlaceAddr,
      _royalties,
      overrides || {}
    ) as Promise<TheSourceArticle>;
  }
  override getDeployTransaction(
    _marketPlaceAddr: PromiseOrValue<string>,
    _royalties: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketPlaceAddr,
      _royalties,
      overrides || {}
    );
  }
  override attach(address: string): TheSourceArticle {
    return super.attach(address) as TheSourceArticle;
  }
  override connect(signer: Signer): TheSourceArticle__factory {
    return super.connect(signer) as TheSourceArticle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheSourceArticleInterface {
    return new utils.Interface(_abi) as TheSourceArticleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheSourceArticle {
    return new Contract(address, _abi, signerOrProvider) as TheSourceArticle;
  }
}
