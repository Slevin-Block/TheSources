/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheSourceMarketPlace,
  TheSourceMarketPlaceInterface,
} from "../../contracts/TheSourceMarketPlace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "articleId",
        type: "uint256",
      },
    ],
    name: "createArticle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "membershipPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "newArticlePrice",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfMemberToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_articleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyArticle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyMemberToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getArticlePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMemberTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_memberTokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_memberTokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_articleContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_articlePrice",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_memberTokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_authorName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "URI",
        type: "string",
      },
    ],
    name: "mintArticle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "myBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setArticlePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setMemberTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200005b60201b60201c565b6200006360201b60201c565b6001808190555062000055670db966c6133a258d60c01b6200012760201b60201c565b6200012a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b61276e806200013a6000396000f3fe6080604052600436106100ec5760003560e01c806378b7c66f1161008a578063c9116b6911610059578063c9116b6914610343578063ce215c561461036e578063f2fde38b14610397578063ff2b1190146103c057610163565b806378b7c66f146102925780638da5cb5b146102c257806395c95eb0146102ed578063ac9ce66e1461031857610163565b8063602bead5116100c6578063602bead5146101e55780636aa5c3521461020e57806370a082311461023e578063715018a61461027b57610163565b806310599c16146101685780632e1a7d4d146101915780634ed5d0c6146101ba57610163565b36610163576101056776b0de33ae2d830b60c01b6103de565b34600260006101126103e1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461015b9190611b29565b925050819055005b600080fd5b34801561017457600080fd5b5061018f600480360381019061018a9190611b9d565b61040a565b005b34801561019d57600080fd5b506101b860048036038101906101b39190611b9d565b6104cb565b005b3480156101c657600080fd5b506101cf61080e565b6040516101dc9190611bd9565b60405180910390f35b3480156101f157600080fd5b5061020c60048036038101906102079190611c52565b610854565b005b61022860048036038101906102239190611cb9565b61097e565b6040516102359190611d14565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190611d2f565b610e6b565b6040516102729190611bd9565b60405180910390f35b34801561028757600080fd5b50610290610f20565b005b6102ac60048036038101906102a79190611f02565b610f34565b6040516102b99190611bd9565b60405180910390f35b3480156102ce57600080fd5b506102d76103e1565b6040516102e49190612030565b60405180910390f35b3480156102f957600080fd5b50610302611321565b60405161030f9190611bd9565b60405180910390f35b34801561032457600080fd5b5061032d611400565b60405161033a9190611bd9565b60405180910390f35b34801561034f57600080fd5b50610358611446565b6040516103659190611bd9565b60405180910390f35b34801561037a57600080fd5b5061039560048036038101906103909190611b9d565b6114c9565b005b3480156103a357600080fd5b506103be60048036038101906103b99190611d2f565b61158a565b005b6103c8611739565b6040516103d59190611bd9565b60405180910390f35b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61041e6705ccda39912c283560c01b6103de565b61042661194e565b61043a67fefe1c435a1717f660c01b6103de565b61044e67d726f047bb6c4e6060c01b6103de565b610462675c3a29a972ff668460c01b6103de565b8060058190555061047d67f4d044943dd2bee660c01b6103de565b610491675305a6bb719c59dc60c01b6103de565b7f66d54ee5dfff9d1ed5d04b3a2f79d518d69956edbbb843cdcf4f816efb112042816040516104c09190611bd9565b60405180910390a150565b6104df675536610ae85de71b60c01b6103de565b6104e76119cc565b6104fb67de8a1651629b63be60c01b6103de565b61050f67266b7da5a800741260c01b6103de565b61052367f9d1f120e8506bbb60c01b6103de565b6105376717e01a048bdea42460c01b6103de565b61054b6751cd2a579edccd7b60c01b6103de565b6000811161058e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610585906120a8565b60405180910390fd5b6105a267bce6e5cc9becec9260c01b6103de565b6105b6673d701a7afc5b65d960c01b6103de565b6105ca676c58f8f5e02d4f1460c01b6103de565b6105de673fbed2fc8b75cd7260c01b6103de565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790612114565b60405180910390fd5b610674677b8547c6225484de60c01b6103de565b61068867982e563ede42e3e460c01b6103de565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106d79190612134565b925050819055506106f26793739fedb4bad4b760c01b6103de565b61070667979a7f438f9f356f60c01b6103de565b60003373ffffffffffffffffffffffffffffffffffffffff168260405161072c90612199565b60006040518083038185875af1925050503d8060008114610769576040519150601f19603f3d011682016040523d82523d6000602084013e61076e565b606091505b505090506107866720aac95f3ee88a4460c01b6103de565b61079a672b0a34df9e2f298660c01b6103de565b6107ae67135f2e6af2800fd060c01b6103de565b806107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e5906121fa565b60405180910390fd5b610802679998cd4ee0857f5560c01b6103de565b5061080b611a1b565b50565b60006108246721368d41aca9d9a060c01b6103de565b610838677f65171e9a4741df60c01b6103de565b61084c67630a13c72757467460c01b6103de565b600554905090565b6108686715656b5252179e0f60c01b6103de565b61087061194e565b61088467a0e4b863f89aa52a60c01b6103de565b610898676f282524c4eef3e560c01b6103de565b6108ac67409cb0602a8439d760c01b6103de565b83600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109016772fe9a38328e0a5e60c01b6103de565b8260058190555061091c67565378c45453c7b560c01b6103de565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061097167e6c526ef7289f97b60c01b6103de565b8060068190555050505050565b6000610994671e6cdada035f270460c01b6103de565b6109a867c43e3b70cb6bb37a60c01b6103de565b6109bb66c8b0fe94a61dd260c01b6103de565b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b0df9b83876040518263ffffffff1660e01b8152600401610a1b9190611bd9565b606060405180830381865afa158015610a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c9190612244565b925092509250610a76672ff7d1d4f4b0477760c01b6103de565b610a8a6729e7b2f895ed36f460c01b6103de565b610a9e67cefc70c0493c78fc60c01b6103de565b8482610aaa9190612297565b341015610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae390612325565b60405180910390fd5b610b006728656e794bcdfcc960c01b6103de565b610b1467a8a5e5e8ac7281c060c01b6103de565b610b2867889d939283a57ab660c01b6103de565b610b3c6710ee8001d062569f60c01b6103de565b82851115610b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7690612391565b60405180910390fd5b610b9367f63c7b97cdb0f80160c01b6103de565b610ba76793acd241e37fd8c760c01b6103de565b610bbb67639d16b5f61bcf9b60c01b6103de565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e77300d3388886040518463ffffffff1660e01b8152600401610c1a939291906123b1565b600060405180830381600087803b158015610c3457600080fd5b505af1158015610c48573d6000803e3d6000fd5b50505050610c606790f7f0b970c6309060c01b6103de565b610c7467ec6dcbe4e520a82a60c01b6103de565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f053dc5c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0791906123e8565b9050610d1d67e77990efbc83ff4960c01b6103de565b610d31671a4bc36fb4234f1d60c01b6103de565b60006103e88234610d429190612297565b610d4c9190612444565b9050610d6267eaa25de548a5efe260c01b6103de565b8034610d6e9190612134565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dbc9190611b29565b92505081905550610dd767b836201e875bcf4660c01b6103de565b8060026000610de46103e1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e2d9190611b29565b92505081905550610e4867b75ffaa66c17d3d660c01b6103de565b610e5c67a546300dfec051f960c01b6103de565b60019550505050505092915050565b6000610e8167b5f8f49e6154710d60c01b6103de565b610e8961194e565b610e9d67861405512357cac060c01b6103de565b610eb16782a9704b2bd8ae8260c01b6103de565b610ec5670a60cc44159de67d60c01b6103de565b610ed96751e6d11b2cf5f08f60c01b6103de565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610f2861194e565b610f326000611a24565b565b6000610f4a673cc8f668e279ea8b60c01b6103de565b610f5e6778016f3b69911bde60c01b6103de565b610f7267669ade57aa10c5fe60c01b6103de565b610f86673066a75d28b37d7260c01b6103de565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e8d6040518263ffffffff1660e01b8152600401610ff89190611bd9565b602060405180830381865afa158015611015573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110399190612475565b73ffffffffffffffffffffffffffffffffffffffff161461108f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108690612514565b60405180910390fd5b6110a367ae505b71f55c4a6360c01b6103de565b6110b76724de257645d602b260c01b6103de565b6110cb67ded1654b9046c8c160c01b6103de565b6110df67f8ebdd9abe8b667e60c01b6103de565b600654341015611124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111b90612325565b60405180910390fd5b611138679225a9104d204ced60c01b6103de565b61114b6664e5749e46407860c01b6103de565b61115f67fe1fdc09054cb67960c01b6103de565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f6b49df88c8c8c8c8c8c338d8d8d6040518b63ffffffff1660e01b81526004016111ce9a999897969594939291906125cf565b6020604051808303816000875af11580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121191906123e8565b9050611227673d9af25cb3ee9bba60c01b6103de565b34600260006112346103e1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461127d9190611b29565b92505081905550611298672f0415f1b34dc04160c01b6103de565b6112ac676255b1a995400e7960c01b6103de565b7fdaf695c1b04d7651b51a60d7390d40e64840134c0943db129871d2ef48401a0b338d836040516112df939291906123b1565b60405180910390a16112fb67a02b9214211eedcd60c01b6103de565b61130f670a885d6652655c2860c01b6103de565b809150509a9950505050505050505050565b6000611337678b7bcee7293d5bf560c01b6103de565b61134b67f87f9a0846ce8b4360c01b6103de565b61135f6742c0680991590b4d60c01b6103de565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016113ba9190612030565b602060405180830381865afa1580156113d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fb91906123e8565b905090565b600061141667baeefc89e949905260c01b6103de565b61142a67fa8e4e9cff93e23660c01b6103de565b61143e67ed33982faed9a44f60c01b6103de565b600654905090565b600061145c67b2b7fc53ee2fd98d60c01b6103de565b61147067082110597a40429760c01b6103de565b61148467ae06f6f6709f264d60c01b6103de565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6114dd67b34861b84dffe2fd60c01b6103de565b6114e561194e565b6114f96715fcfc55e0be088460c01b6103de565b61150d672c5126b1b4a0e6b060c01b6103de565b6115216761757acb432354a560c01b6103de565b8060068190555061153c67e106cc89b6d5757360c01b6103de565b61155067a3d2c931ee85e12660c01b6103de565b7fe27a05367ae9096f97930b7212cac84e666eff0b4327729d27775049d2451db18160405161157f9190611bd9565b60405180910390a150565b61159e675b682c105a233b5860c01b6103de565b6115a661194e565b6115ba67a0278a100c02adf160c01b6103de565b6115ce67ab9d66100fbf523760c01b6103de565b6115e267c2f85cccada8ba4460c01b6103de565b6115f667d4f3b1b7fef6c8d660c01b6103de565b60006116006103e1565b905061161667863bfde186c0a78d60c01b6103de565b61162a675d0072a8842405d960c01b6103de565b61163382611a24565b61164767cb7fc67fd3010beb60c01b6103de565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116d59190611b29565b925050819055506116f067b5f471ab5513501560c01b6103de565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600061174f67efeb2c758bf7014460c01b6103de565b611763673aa05f5b6b10faeb60c01b6103de565b6117776783be7f38da1723ec60c01b6103de565b61178b67ed414e3bff38e9f560c01b6103de565b6005543410156117d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c790612325565b60405180910390fd5b6117e467079cb2a8651ad37760c01b6103de565b6117f867ed21070d50ed7c5f60c01b6103de565b61180c674327a9a51040120260c01b6103de565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340d097c3336040518263ffffffff1660e01b81526004016118699190612030565b6020604051808303816000875af1158015611888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ac91906123e8565b90506118c267d1735420d70fa90c60c01b6103de565b34600260006118cf6103e1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119189190611b29565b9250508190555061193367e38f5b9b09bdd34160c01b6103de565b611947672e300c0e1911762660c01b6103de565b8091505090565b611956611ae8565b73ffffffffffffffffffffffffffffffffffffffff166119746103e1565b73ffffffffffffffffffffffffffffffffffffffff16146119ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c1906126ac565b60405180910390fd5b565b600260015403611a11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0890612718565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b3482611af0565b9150611b3f83611af0565b9250828201905080821115611b5757611b56611afa565b5b92915050565b6000604051905090565b600080fd5b600080fd5b611b7a81611af0565b8114611b8557600080fd5b50565b600081359050611b9781611b71565b92915050565b600060208284031215611bb357611bb2611b67565b5b6000611bc184828501611b88565b91505092915050565b611bd381611af0565b82525050565b6000602082019050611bee6000830184611bca565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c1f82611bf4565b9050919050565b611c2f81611c14565b8114611c3a57600080fd5b50565b600081359050611c4c81611c26565b92915050565b60008060008060808587031215611c6c57611c6b611b67565b5b6000611c7a87828801611c3d565b9450506020611c8b87828801611b88565b9350506040611c9c87828801611c3d565b9250506060611cad87828801611b88565b91505092959194509250565b60008060408385031215611cd057611ccf611b67565b5b6000611cde85828601611b88565b9250506020611cef85828601611b88565b9150509250929050565b60008115159050919050565b611d0e81611cf9565b82525050565b6000602082019050611d296000830184611d05565b92915050565b600060208284031215611d4557611d44611b67565b5b6000611d5384828501611c3d565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611d8157611d80611d5c565b5b8235905067ffffffffffffffff811115611d9e57611d9d611d61565b5b602083019150836001820283011115611dba57611db9611d66565b5b9250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e0f82611dc6565b810181811067ffffffffffffffff82111715611e2e57611e2d611dd7565b5b80604052505050565b6000611e41611b5d565b9050611e4d8282611e06565b919050565b600067ffffffffffffffff821115611e6d57611e6c611dd7565b5b611e7682611dc6565b9050602081019050919050565b82818337600083830152505050565b6000611ea5611ea084611e52565b611e37565b905082815260208101848484011115611ec157611ec0611dc1565b5b611ecc848285611e83565b509392505050565b600082601f830112611ee957611ee8611d5c565b5b8135611ef9848260208601611e92565b91505092915050565b60008060008060008060008060008060e08b8d031215611f2557611f24611b67565b5b6000611f338d828e01611b88565b9a505060208b013567ffffffffffffffff811115611f5457611f53611b6c565b5b611f608d828e01611d6b565b995099505060408b013567ffffffffffffffff811115611f8357611f82611b6c565b5b611f8f8d828e01611d6b565b975097505060608b013567ffffffffffffffff811115611fb257611fb1611b6c565b5b611fbe8d828e01611d6b565b95509550506080611fd18d828e01611b88565b93505060a0611fe28d828e01611b88565b92505060c08b013567ffffffffffffffff81111561200357612002611b6c565b5b61200f8d828e01611ed4565b9150509295989b9194979a5092959850565b61202a81611c14565b82525050565b60006020820190506120456000830184612021565b92915050565b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b600061209260208361204b565b915061209d8261205c565b602082019050919050565b600060208201905081810360008301526120c181612085565b9050919050565b7f496e73756666696369656e742062616c616e636520696e20636f6e7472616374600082015250565b60006120fe60208361204b565b9150612109826120c8565b602082019050919050565b6000602082019050818103600083015261212d816120f1565b9050919050565b600061213f82611af0565b915061214a83611af0565b925082820390508181111561216257612161611afa565b5b92915050565b600081905092915050565b50565b6000612183600083612168565b915061218e82612173565b600082019050919050565b60006121a482612176565b9150819050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006121e460108361204b565b91506121ef826121ae565b602082019050919050565b60006020820190508181036000830152612213816121d7565b9050919050565b60008151905061222981611b71565b92915050565b60008151905061223e81611c26565b92915050565b60008060006060848603121561225d5761225c611b67565b5b600061226b8682870161221a565b935050602061227c8682870161221a565b925050604061228d8682870161222f565b9150509250925092565b60006122a282611af0565b91506122ad83611af0565b92508282026122bb81611af0565b915082820484148315176122d2576122d1611afa565b5b5092915050565b7f4e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b600061230f600a8361204b565b915061231a826122d9565b602082019050919050565b6000602082019050818103600083015261233e81612302565b9050919050565b7f4e6f7420656e6f75676820737570706c79000000000000000000000000000000600082015250565b600061237b60118361204b565b915061238682612345565b602082019050919050565b600060208201905081810360008301526123aa8161236e565b9050919050565b60006060820190506123c66000830186612021565b6123d36020830185611bca565b6123e06040830184611bca565b949350505050565b6000602082840312156123fe576123fd611b67565b5b600061240c8482850161221a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061244f82611af0565b915061245a83611af0565b92508261246a57612469612415565b5b828204905092915050565b60006020828403121561248b5761248a611b67565b5b60006124998482850161222f565b91505092915050565b7f446f6e27742068617665206163636573732c20627579206f72206368616e676560008201527f204d656d626572546f6b656e0000000000000000000000000000000000000000602082015250565b60006124fe602c8361204b565b9150612509826124a2565b604082019050919050565b6000602082019050818103600083015261252d816124f1565b9050919050565b6000612540838561204b565b935061254d838584611e83565b61255683611dc6565b840190509392505050565b600081519050919050565b60005b8381101561258a57808201518184015260208101905061256f565b60008484015250505050565b60006125a182612561565b6125ab818561204b565b93506125bb81856020860161256c565b6125c481611dc6565b840191505092915050565b600060e08201905081810360008301526125ea818c8e612534565b905081810360208301526125ff818a8c612534565b9050818103604083015261261481888a612534565b90506126236060830187612021565b6126306080830186611bca565b61263d60a0830185611bca565b81810360c083015261264f8184612596565b90509b9a5050505050505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061269660208361204b565b91506126a182612660565b602082019050919050565b600060208201905081810360008301526126c581612689565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612702601f8361204b565b915061270d826126cc565b602082019050919050565b60006020820190508181036000830152612731816126f5565b905091905056fea26469706673582212201d4392f6aa2bf24afb64457bfe4ce2f7808abb9389cb13e9897a92341d141d0d64736f6c63430008120033";

type TheSourceMarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheSourceMarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheSourceMarketPlace__factory extends ContractFactory {
  constructor(...args: TheSourceMarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheSourceMarketPlace> {
    return super.deploy(overrides || {}) as Promise<TheSourceMarketPlace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TheSourceMarketPlace {
    return super.attach(address) as TheSourceMarketPlace;
  }
  override connect(signer: Signer): TheSourceMarketPlace__factory {
    return super.connect(signer) as TheSourceMarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheSourceMarketPlaceInterface {
    return new utils.Interface(_abi) as TheSourceMarketPlaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheSourceMarketPlace {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TheSourceMarketPlace;
  }
}
