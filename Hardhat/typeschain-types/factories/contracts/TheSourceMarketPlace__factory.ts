/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheSourceMarketPlace,
  TheSourceMarketPlaceInterface,
} from "../../contracts/TheSourceMarketPlace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "articleId",
        type: "uint256",
      },
    ],
    name: "createArticle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "membershipPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "newArticlePrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "newMemberToken",
    type: "event",
  },
  {
    inputs: [],
    name: "articleContract",
    outputs: [
      {
        internalType: "contract TheSourceArticle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfMemberToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_articleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyArticle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyMemberToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getArticlePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMemberTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_memberTokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_memberTokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_articleContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_articlePrice",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "memberTokenContract",
    outputs: [
      {
        internalType: "contract TheSourceMemberToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_memberTokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_authorName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "URI",
        type: "string",
      },
    ],
    name: "mintArticle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "myBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setArticlePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBase",
        type: "string",
      },
    ],
    name: "setBaseURIMemberToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setMemberTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611300806100826000396000f3fe60806040526004361061010d5760003560e01c80638da5cb5b11610095578063c9116b6911610064578063c9116b69146102f6578063ce215c5614610318578063f2fde38b14610338578063f842feff14610358578063ff2b11901461037857600080fd5b80638da5cb5b1461028e57806395c95eb0146102ac578063ac9ce66e146102c1578063af30d6b9146102d657600080fd5b80636aa5c352116100dc5780636aa5c352146101eb5780636eddd4931461020e57806370a0823114610246578063715018a61461026657806378b7c66f1461027b57600080fd5b806310599c16146101655780632e1a7d4d146101875780634ed5d0c6146101a7578063602bead5146101cb57600080fd5b366101605734600260006101296000546001600160a01b031690565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546101589190610e19565b925050819055005b600080fd5b34801561017157600080fd5b50610185610180366004610e2c565b610380565b005b34801561019357600080fd5b506101856101a2366004610e2c565b6103c4565b3480156101b357600080fd5b506005545b6040519081526020015b60405180910390f35b3480156101d757600080fd5b506101856101e6366004610e5a565b61053c565b6101fe6101f9366004610ea2565b61057c565b60405190151581526020016101c2565b34801561021a57600080fd5b5060045461022e906001600160a01b031681565b6040516001600160a01b0390911681526020016101c2565b34801561025257600080fd5b506101b8610261366004610ec4565b6107f9565b34801561027257600080fd5b5061018561081f565b6101b8610289366004610fd4565b610833565b34801561029a57600080fd5b506000546001600160a01b031661022e565b3480156102b857600080fd5b506101b8610a67565b3480156102cd57600080fd5b506006546101b8565b3480156102e257600080fd5b506101856102f13660046110ae565b610ad9565b34801561030257600080fd5b50336000908152600260205260409020546101b8565b34801561032457600080fd5b50610185610333366004610e2c565b610b46565b34801561034457600080fd5b50610185610353366004610ec4565b610b83565b34801561036457600080fd5b5060035461022e906001600160a01b031681565b610185610bf2565b610388610d00565b60058190556040518181527f66d54ee5dfff9d1ed5d04b3a2f79d518d69956edbbb843cdcf4f816efb112042906020015b60405180910390a150565b6103cc610d5a565b600081116104215760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b336000908152600260205260409020548111156104805760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e742062616c616e636520696e20636f6e74726163746044820152606401610418565b336000908152600260205260408120805483929061049f9084906110eb565b9091555050604051600090339083908381818185875af1925050503d80600081146104e6576040519150601f19603f3d011682016040523d82523d6000602084013e6104eb565b606091505b505090508061052f5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610418565b5061053960018055565b50565b610544610d00565b600380546001600160a01b03199081166001600160a01b03968716179091556005939093556004805490931691909316179055600655565b6004805460405163b0df9b8360e01b81529182018490526000918291829182916001600160a01b03169063b0df9b8390602401606060405180830381865afa1580156105cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f091906110fe565b919450925090506106018583611137565b3410156106205760405162461bcd60e51b81526004016104189061114e565b828511156106645760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820737570706c7960781b6044820152606401610418565b60048054604051637e77300d60e01b8152339281019290925260248201889052604482018790526001600160a01b031690637e77300d90606401600060405180830381600087803b1580156106b857600080fd5b505af11580156106cc573d6000803e3d6000fd5b505050506000600460009054906101000a90046001600160a01b03166001600160a01b031663f053dc5c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190611172565b905060006103e861075a8334611137565b610764919061118b565b905061077081346110eb565b6001600160a01b03841660009081526002602052604081208054909190610798908490610e19565b90915550819050600260006107b56000546001600160a01b031690565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546107e49190610e19565b90915550600196505050505050505b92915050565b6000610803610d00565b506001600160a01b031660009081526002602052604090205490565b610827610d00565b6108316000610db3565b565b6003546040516331a9108f60e11b8152600481018c905260009133916001600160a01b0390911690636352211e90602401602060405180830381865afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a591906111ad565b6001600160a01b0316146109105760405162461bcd60e51b815260206004820152602c60248201527f446f6e27742068617665206163636573732c20627579206f72206368616e676560448201526b1026b2b6b132b92a37b5b2b760a11b6064820152608401610418565b6006543410156109325760405162461bcd60e51b81526004016104189061114e565b6000600460009054906101000a90046001600160a01b03166001600160a01b031663f6b49df88c8c8c8c8c8c338d8d8d6040518b63ffffffff1660e01b81526004016109879a99989796959493929190611239565b6020604051808303816000875af11580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca9190611172565b905034600260006109e36000546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610a129190610e19565b909155505060408051338152602081018e90529081018290527fdaf695c1b04d7651b51a60d7390d40e64840134c0943db129871d2ef48401a0b9060600160405180910390a19b9a5050505050505050505050565b6003546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad49190611172565b905090565b610ae1610d00565b6003546040516355f804b360e01b81526001600160a01b03909116906355f804b390610b119084906004016112b7565b600060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b5050505050565b610b4e610d00565b60068190556040518181527fe27a05367ae9096f97930b7212cac84e666eff0b4327729d27775049d2451db1906020016103b9565b610b8b610d00565b6000546001600160a01b0316610ba082610db3565b6001600160a01b0380821660009081526002602052604080822054928516825281208054909190610bd2908490610e19565b90915550506001600160a01b031660009081526002602052604081205550565b600554341015610c145760405162461bcd60e51b81526004016104189061114e565b6003546040516340d097c360e01b81523360048201526000916001600160a01b0316906340d097c3906024016020604051808303816000875af1158015610c5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c839190611172565b90503460026000610c9c6000546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ccb9190610e19565b90915550506040518181527f83aaf6db56a1fb9f4570edcf2a4e72e264fa4534005affd856388c185f71b9ad906020016103b9565b6000546001600160a01b031633146108315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610418565b600260015403610dac5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610418565b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107f3576107f3610e03565b600060208284031215610e3e57600080fd5b5035919050565b6001600160a01b038116811461053957600080fd5b60008060008060808587031215610e7057600080fd5b8435610e7b81610e45565b9350602085013592506040850135610e9281610e45565b9396929550929360600135925050565b60008060408385031215610eb557600080fd5b50508035926020909101359150565b600060208284031215610ed657600080fd5b8135610ee181610e45565b9392505050565b60008083601f840112610efa57600080fd5b50813567ffffffffffffffff811115610f1257600080fd5b602083019150836020828501011115610f2a57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f5857600080fd5b813567ffffffffffffffff80821115610f7357610f73610f31565b604051601f8301601f19908116603f01168101908282118183101715610f9b57610f9b610f31565b81604052838152866020858801011115610fb457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060008060e08b8d031215610ff357600080fd5b8a35995060208b013567ffffffffffffffff8082111561101257600080fd5b61101e8e838f01610ee8565b909b50995060408d013591508082111561103757600080fd5b6110438e838f01610ee8565b909950975060608d013591508082111561105c57600080fd5b6110688e838f01610ee8565b909750955060808d0135945060a08d0135935060c08d013591508082111561108f57600080fd5b5061109c8d828e01610f47565b9150509295989b9194979a5092959850565b6000602082840312156110c057600080fd5b813567ffffffffffffffff8111156110d757600080fd5b6110e384828501610f47565b949350505050565b818103818111156107f3576107f3610e03565b60008060006060848603121561111357600080fd5b8351925060208401519150604084015161112c81610e45565b809150509250925092565b80820281158282048414176107f3576107f3610e03565b6020808252600a908201526909cdee840cadcdeeaced60b31b604082015260600190565b60006020828403121561118457600080fd5b5051919050565b6000826111a857634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156111bf57600080fd5b8151610ee181610e45565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b81811015611219576020818501810151868301820152016111fd565b506000602082860101526020601f19601f83011685010191505092915050565b60e08152600061124d60e083018c8e6111ca565b8281036020840152611260818b8d6111ca565b9050828103604084015261127581898b6111ca565b6001600160a01b03881660608501526080840187905260a0840186905283810360c085015290506112a681856111f3565b9d9c50505050505050505050505050565b602081526000610ee160208301846111f356fea26469706673582212202b2dca093c70c242ab5e0f583578160f6332032e3bdfc7321f8e6eb5f83ec74464736f6c63430008120033";

type TheSourceMarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheSourceMarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheSourceMarketPlace__factory extends ContractFactory {
  constructor(...args: TheSourceMarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheSourceMarketPlace> {
    return super.deploy(overrides || {}) as Promise<TheSourceMarketPlace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TheSourceMarketPlace {
    return super.attach(address) as TheSourceMarketPlace;
  }
  override connect(signer: Signer): TheSourceMarketPlace__factory {
    return super.connect(signer) as TheSourceMarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheSourceMarketPlaceInterface {
    return new utils.Interface(_abi) as TheSourceMarketPlaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheSourceMarketPlace {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TheSourceMarketPlace;
  }
}
