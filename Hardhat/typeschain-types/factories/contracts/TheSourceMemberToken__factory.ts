/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheSourceMemberToken,
  TheSourceMemberTokenInterface,
} from "../../contracts/TheSourceMemberToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketPlaceAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalties",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfMemberToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalties",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ccf38038062001ccf833981016040819052620000349162000239565b6040518060400160405280601481526020017f546865536f757263654d656d627265546f6b656e000000000000000000000000815250604051806040016040528060048152602001631514d35560e21b8152508160009081620000989190620003c7565b506001620000a78282620003c7565b505050620000c4620000be620000ec60201b60201c565b620000f0565b620000cf8362000142565b6009829055600a620000e28282620003c7565b5050505062000493565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200014c620001c5565b6001600160a01b038116620001b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620001c281620000f0565b50565b6007546001600160a01b03163314620002215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620001ae565b565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200024f57600080fd5b83516001600160a01b03811681146200026757600080fd5b60208581015160408701519295509350906001600160401b03808211156200028e57600080fd5b818701915087601f830112620002a357600080fd5b815181811115620002b857620002b862000223565b604051601f8201601f19908116603f01168101908382118183101715620002e357620002e362000223565b816040528281528a86848701011115620002fc57600080fd5b600093505b8284101562000320578484018601518185018701529285019262000301565b60008684830101528096505050505050509250925092565b600181811c908216806200034d57607f821691505b6020821081036200036e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003c257600081815260208120601f850160051c810160208610156200039d5750805b601f850160051c820191505b81811015620003be57828155600101620003a9565b5050505b505050565b81516001600160401b03811115620003e357620003e362000223565b620003fb81620003f4845462000338565b8462000374565b602080601f8311600181146200043357600084156200041a5750858301515b600019600386901b1c1916600185901b178555620003be565b600085815260208120601f198616915b82811015620004645788860151825594840194600190910190840162000443565b5085821015620004835787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61182c80620004a36000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde1461024c578063c87b56dd1461025f578063e985e9c514610272578063f053dc5c146102ae578063f2fde38b146102b757600080fd5b806370a0823114610205578063715018a6146102185780638da5cb5b1461022057806395d89b4114610231578063a22cb4651461023957600080fd5b806323b872dd116100f457806323b872dd146101a357806340d097c3146101b657806342842e0e146101d75780635fad4666146101ea5780636352211e146101f257600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004611286565b6102ca565b60405190151581526020015b60405180910390f35b61015661031c565b60405161014591906112f3565b610176610171366004611306565b6103ae565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611336565b6103d5565b005b6101a16101b1366004611360565b6104ef565b6101c96101c436600461139c565b610520565b604051908152602001610145565b6101a16101e5366004611360565b6105d0565b6101c96105eb565b610176610200366004611306565b6105fb565b6101c961021336600461139c565b61065b565b6101a16106e1565b6007546001600160a01b0316610176565b6101566106f5565b6101a16102473660046113b7565b610704565b6101a161025a366004611409565b610713565b61015661026d366004611306565b61074b565b6101396102803660046114e5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101c960095481565b6101a16102c536600461139c565b61084e565b60006001600160e01b031982166380ac58cd60e01b14806102fb57506001600160e01b03198216635b5e139f60e01b145b8061031657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032b90611518565b80601f016020809104026020016040519081016040528092919081815260200182805461035790611518565b80156103a45780601f10610379576101008083540402835291602001916103a4565b820191906000526020600020905b81548152906001019060200180831161038757829003601f168201915b5050505050905090565b60006103b9826108c7565b506000908152600460205260409020546001600160a01b031690565b60006103e0826105fb565b9050806001600160a01b0316836001600160a01b0316036104525760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061046e575061046e8133610280565b6104e05760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610449565b6104ea8383610926565b505050565b6104f93382610994565b6105155760405162461bcd60e51b815260040161044990611552565b6104ea838383610a12565b600061052a610b76565b610538600880546001019055565b600061054360085490565b905061054f8382610bd0565b600061055a82610bea565b60405160200161056a919061159f565b60405160208183030381529060405290506105858282610c7d565b604080516001600160a01b0386168152602081018490527f40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f2842910160405180910390a15090505b919050565b6104ea83838360405180602001604052806000815250610713565b60006105f660085490565b905090565b6000818152600260205260408120546001600160a01b0316806103165760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610449565b60006001600160a01b0382166106c55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610449565b506001600160a01b031660009081526003602052604090205490565b6106e9610b76565b6106f36000610d10565b565b60606001805461032b90611518565b61070f338383610d62565b5050565b61071d3383610994565b6107395760405162461bcd60e51b815260040161044990611552565b61074584848484610e30565b50505050565b6060610756826108c7565b6000828152600660205260408120805461076f90611518565b80601f016020809104026020016040519081016040528092919081815260200182805461079b90611518565b80156107e85780601f106107bd576101008083540402835291602001916107e8565b820191906000526020600020905b8154815290600101906020018083116107cb57829003601f168201915b5050505050905060006107f9610e63565b9050805160000361080b575092915050565b81511561083d5780826040516020016108259291906115c8565b60405160208183030381529060405292505050919050565b61084684610e72565b949350505050565b610856610b76565b6001600160a01b0381166108bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610449565b6108c481610d10565b50565b6000818152600260205260409020546001600160a01b03166108c45760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610449565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061095b826105fb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109a0836105fb565b9050806001600160a01b0316846001600160a01b031614806109e757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108465750836001600160a01b0316610a00846103ae565b6001600160a01b031614949350505050565b826001600160a01b0316610a25826105fb565b6001600160a01b031614610a4b5760405162461bcd60e51b8152600401610449906115f7565b6001600160a01b038216610aad5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610449565b826001600160a01b0316610ac0826105fb565b6001600160a01b031614610ae65760405162461bcd60e51b8152600401610449906115f7565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b031633146106f35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610449565b61070f828260405180602001604052806000815250610ed9565b60606000610bf783610f0c565b600101905060008167ffffffffffffffff811115610c1757610c176113f3565b6040519080825280601f01601f191660200182016040528015610c41576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c4b57509392505050565b6000828152600260205260409020546001600160a01b0316610cf85760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610449565b60008281526006602052604090206104ea828261168a565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610dc35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610449565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e3b848484610a12565b610e4784848484610fe4565b6107455760405162461bcd60e51b81526004016104499061174a565b6060600a805461032b90611518565b6060610e7d826108c7565b6000610e87610e63565b90506000815111610ea75760405180602001604052806000815250610ed2565b80610eb184610bea565b604051602001610ec29291906115c8565b6040516020818303038152906040525b9392505050565b610ee383836110e5565b610ef06000848484610fe4565b6104ea5760405162461bcd60e51b81526004016104499061174a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f4b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f77576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f9557662386f26fc10000830492506010015b6305f5e1008310610fad576305f5e100830492506008015b6127108310610fc157612710830492506004015b60648310610fd3576064830492506002015b600a83106103165760010192915050565b60006001600160a01b0384163b156110da57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061102890339089908890889060040161179c565b6020604051808303816000875af1925050508015611063575060408051601f3d908101601f19168201909252611060918101906117d9565b60015b6110c0573d808015611091576040519150601f19603f3d011682016040523d82523d6000602084013e611096565b606091505b5080516000036110b85760405162461bcd60e51b81526004016104499061174a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610846565b506001949350505050565b6001600160a01b03821661113b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610449565b6000818152600260205260409020546001600160a01b0316156111a05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610449565b6000818152600260205260409020546001600160a01b0316156112055760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610449565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146108c457600080fd5b60006020828403121561129857600080fd5b8135610ed281611270565b60005b838110156112be5781810151838201526020016112a6565b50506000910152565b600081518084526112df8160208601602086016112a3565b601f01601f19169290920160200192915050565b602081526000610ed260208301846112c7565b60006020828403121561131857600080fd5b5035919050565b80356001600160a01b03811681146105cb57600080fd5b6000806040838503121561134957600080fd5b6113528361131f565b946020939093013593505050565b60008060006060848603121561137557600080fd5b61137e8461131f565b925061138c6020850161131f565b9150604084013590509250925092565b6000602082840312156113ae57600080fd5b610ed28261131f565b600080604083850312156113ca57600080fd5b6113d38361131f565b9150602083013580151581146113e857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561141f57600080fd5b6114288561131f565b93506114366020860161131f565b925060408501359150606085013567ffffffffffffffff8082111561145a57600080fd5b818701915087601f83011261146e57600080fd5b813581811115611480576114806113f3565b604051601f8201601f19908116603f011681019083821181831017156114a8576114a86113f3565b816040528281528a60208487010111156114c157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156114f857600080fd5b6115018361131f565b915061150f6020840161131f565b90509250929050565b600181811c9082168061152c57607f821691505b60208210810361154c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600082516115b18184602087016112a3565b64173539b7b760d91b920191825250600501919050565b600083516115da8184602088016112a3565b8351908301906115ee8183602088016112a3565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f8211156104ea57600081815260208120601f850160051c810160208610156116635750805b601f850160051c820191505b818110156116825782815560010161166f565b505050505050565b815167ffffffffffffffff8111156116a4576116a46113f3565b6116b8816116b28454611518565b8461163c565b602080601f8311600181146116ed57600084156116d55750858301515b600019600386901b1c1916600185901b178555611682565b600085815260208120601f198616915b8281101561171c578886015182559484019460019091019084016116fd565b508582101561173a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117cf908301846112c7565b9695505050505050565b6000602082840312156117eb57600080fd5b8151610ed28161127056fea264697066735822122008709b49eaa9cf8c7250688377d13d7a0f0fe14edc30d86dcd918f42fb37420264736f6c63430008120033";

type TheSourceMemberTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheSourceMemberTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheSourceMemberToken__factory extends ContractFactory {
  constructor(...args: TheSourceMemberTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketPlaceAddr: PromiseOrValue<string>,
    _royalties: PromiseOrValue<BigNumberish>,
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheSourceMemberToken> {
    return super.deploy(
      _marketPlaceAddr,
      _royalties,
      baseURI_,
      overrides || {}
    ) as Promise<TheSourceMemberToken>;
  }
  override getDeployTransaction(
    _marketPlaceAddr: PromiseOrValue<string>,
    _royalties: PromiseOrValue<BigNumberish>,
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketPlaceAddr,
      _royalties,
      baseURI_,
      overrides || {}
    );
  }
  override attach(address: string): TheSourceMemberToken {
    return super.attach(address) as TheSourceMemberToken;
  }
  override connect(signer: Signer): TheSourceMemberToken__factory {
    return super.connect(signer) as TheSourceMemberToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheSourceMemberTokenInterface {
    return new utils.Interface(_abi) as TheSourceMemberTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheSourceMemberToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TheSourceMemberToken;
  }
}
