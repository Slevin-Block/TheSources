/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheSourceMarketPlace,
  TheSourceMarketPlaceInterface,
} from "../../contracts/TheSourceMarketPlace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "articleId",
        type: "uint256",
      },
    ],
    name: "createArticle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
    ],
    name: "deployBlocknumber",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "membershipPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "newArticlePrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "newMemberToken",
    type: "event",
  },
  {
    inputs: [],
    name: "articleContract",
    outputs: [
      {
        internalType: "contract TheSourceArticle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfMemberToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blocknumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_articleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyArticle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyMemberToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getArticlePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMemberTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_memberTokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_memberTokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_articleContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_articlePrice",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "memberTokenContract",
    outputs: [
      {
        internalType: "contract TheSourceMemberToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_memberTokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_authorName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "URI",
        type: "string",
      },
    ],
    name: "mintArticle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "myBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setArticlePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBase",
        type: "string",
      },
    ],
    name: "setBaseURIMemberToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blocknumber",
        type: "uint256",
      },
    ],
    name: "setBlocknumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setMemberTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114ef806100826000396000f3fe6080604052600436106101235760003560e01c80638da5cb5b116100a0578063ce215c5611610064578063ce215c5614610348578063ee87967c14610368578063f2fde38b14610388578063f842feff146103a8578063ff2b1190146103c857600080fd5b80638da5cb5b146102be57806395c95eb0146102dc578063ac9ce66e146102f1578063af30d6b914610306578063c9116b691461032657600080fd5b80636aa5c352116100e75780636aa5c3521461021b5780636eddd4931461023e57806370a0823114610276578063715018a61461029657806378b7c66f146102ab57600080fd5b8063050622471461017b57806310599c16146101a45780632e1a7d4d146101c65780634ed5d0c6146101e6578063602bead5146101fb57600080fd5b3661017657346002600061013f6000546001600160a01b031690565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461016e919061101b565b925050819055005b600080fd5b34801561018757600080fd5b5061019160055481565b6040519081526020015b60405180910390f35b3480156101b057600080fd5b506101c46101bf36600461102e565b6103d0565b005b3480156101d257600080fd5b506101c46101e136600461102e565b610414565b3480156101f257600080fd5b50600654610191565b34801561020757600080fd5b506101c461021636600461105c565b61058c565b61022e6102293660046110a4565b6105cc565b604051901515815260200161019b565b34801561024a57600080fd5b5060045461025e906001600160a01b031681565b6040516001600160a01b03909116815260200161019b565b34801561028257600080fd5b506101916102913660046110c6565b6108c3565b3480156102a257600080fd5b506101c46108e9565b6101916102b93660046111cf565b6108fd565b3480156102ca57600080fd5b506000546001600160a01b031661025e565b3480156102e857600080fd5b50610191610b31565b3480156102fd57600080fd5b50600754610191565b34801561031257600080fd5b506101c46103213660046112a9565b610ba3565b34801561033257600080fd5b5033600090815260026020526040902054610191565b34801561035457600080fd5b506101c461036336600461102e565b610c10565b34801561037457600080fd5b506101c461038336600461102e565b610c4d565b34801561039457600080fd5b506101c46103a33660046110c6565b610cd0565b3480156103b457600080fd5b5060035461025e906001600160a01b031681565b6101c4610d3f565b6103d8610e4d565b60068190556040518181527f66d54ee5dfff9d1ed5d04b3a2f79d518d69956edbbb843cdcf4f816efb112042906020015b60405180910390a150565b61041c610ea7565b600081116104715760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b336000908152600260205260409020548111156104d05760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e742062616c616e636520696e20636f6e74726163746044820152606401610468565b33600090815260026020526040812080548392906104ef9084906112e6565b9091555050604051600090339083908381818185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b505090508061057f5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610468565b5061058960018055565b50565b610594610e4d565b600380546001600160a01b03199081166001600160a01b03968716179091556006939093556004805490931691909316179055600755565b6004805460405163b0df9b8360e01b81529182018490526000918291829182916001600160a01b03169063b0df9b8390602401606060405180830381865afa15801561061c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064091906112f9565b9250925092506000851161068f5760405162461bcd60e51b8152602060048201526016602482015275105b5bdd5b9d081a185d995b89dd081899481b9d5b1b60521b6044820152606401610468565b828511156106d35760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820737570706c7960781b6044820152606401610468565b6106dd8583611332565b3410156106fc5760405162461bcd60e51b815260040161046890611349565b60048054604051637e77300d60e01b8152339281019290925260248201889052604482018790526001600160a01b031690637e77300d90606401600060405180830381600087803b15801561075057600080fd5b505af1158015610764573d6000803e3d6000fd5b505050506000600460009054906101000a90046001600160a01b03166001600160a01b031663f053dc5c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e1919061136d565b90508060000361081e576001600160a01b0382166000908152600260205260408120805434929061081390849061101b565b909155506108b49050565b600061082d34836103e8610f00565b905061083981346112e6565b6001600160a01b0384166000908152600260205260408120805490919061086190849061101b565b909155508190506002600061087e6000546001600160a01b031690565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108ad919061101b565b9091555050505b60019450505050505b92915050565b60006108cd610e4d565b506001600160a01b031660009081526002602052604090205490565b6108f1610e4d565b6108fb6000610fb5565b565b6003546040516331a9108f60e11b8152600481018c905260009133916001600160a01b0390911690636352211e90602401602060405180830381865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190611386565b6001600160a01b0316146109da5760405162461bcd60e51b815260206004820152602c60248201527f446f6e27742068617665206163636573732c20627579206f72206368616e676560448201526b1026b2b6b132b92a37b5b2b760a11b6064820152608401610468565b6007543410156109fc5760405162461bcd60e51b815260040161046890611349565b6000600460009054906101000a90046001600160a01b03166001600160a01b031663f6b49df88c8c8c8c8c8c338d8d8d6040518b63ffffffff1660e01b8152600401610a519a99989796959493929190611412565b6020604051808303816000875af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a94919061136d565b90503460026000610aad6000546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610adc919061101b565b909155505060408051338152602081018e90529081018290527fdaf695c1b04d7651b51a60d7390d40e64840134c0943db129871d2ef48401a0b9060600160405180910390a19b9a5050505050505050505050565b6003546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e919061136d565b905090565b610bab610e4d565b6003546040516355f804b360e01b81526001600160a01b03909116906355f804b390610bdb908490600401611490565b600060405180830381600087803b158015610bf557600080fd5b505af1158015610c09573d6000803e3d6000fd5b5050505050565b610c18610e4d565b60078190556040518181527fe27a05367ae9096f97930b7212cac84e666eff0b4327729d27775049d2451db190602001610409565b610c55610e4d565b60008111610c9b5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b210313637b1b5b73ab6b132b960691b6044820152606401610468565b60058190556040518181527f985238e750fa9791ef2d71918cf9a44c2f0b8643ba3ff5ba8928ff4759ffca3190602001610409565b610cd8610e4d565b6000546001600160a01b0316610ced82610fb5565b6001600160a01b0380821660009081526002602052604080822054928516825281208054909190610d1f90849061101b565b90915550506001600160a01b031660009081526002602052604081205550565b600654341015610d615760405162461bcd60e51b815260040161046890611349565b6003546040516340d097c360e01b81523360048201526000916001600160a01b0316906340d097c3906024016020604051808303816000875af1158015610dac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd0919061136d565b90503460026000610de96000546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610e18919061101b565b90915550506040518181527f83aaf6db56a1fb9f4570edcf2a4e72e264fa4534005affd856388c185f71b9ad90602001610409565b6000546001600160a01b031633146108fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610468565b600260015403610ef95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610468565b6002600155565b6000808060001985870985870292508281108382030391505080600003610f3a57838281610f3057610f306114a3565b0492505050610fae565b808411610f4657600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108bd576108bd611005565b60006020828403121561104057600080fd5b5035919050565b6001600160a01b038116811461058957600080fd5b6000806000806080858703121561107257600080fd5b843561107d81611047565b935060208501359250604085013561109481611047565b9396929550929360600135925050565b600080604083850312156110b757600080fd5b50508035926020909101359150565b6000602082840312156110d857600080fd5b8135610fae81611047565b60008083601f8401126110f557600080fd5b50813567ffffffffffffffff81111561110d57600080fd5b60208301915083602082850101111561112557600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261115357600080fd5b813567ffffffffffffffff8082111561116e5761116e61112c565b604051601f8301601f19908116603f011681019082821181831017156111965761119661112c565b816040528381528660208588010111156111af57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060008060e08b8d0312156111ee57600080fd5b8a35995060208b013567ffffffffffffffff8082111561120d57600080fd5b6112198e838f016110e3565b909b50995060408d013591508082111561123257600080fd5b61123e8e838f016110e3565b909950975060608d013591508082111561125757600080fd5b6112638e838f016110e3565b909750955060808d0135945060a08d0135935060c08d013591508082111561128a57600080fd5b506112978d828e01611142565b9150509295989b9194979a5092959850565b6000602082840312156112bb57600080fd5b813567ffffffffffffffff8111156112d257600080fd5b6112de84828501611142565b949350505050565b818103818111156108bd576108bd611005565b60008060006060848603121561130e57600080fd5b8351925060208401519150604084015161132781611047565b809150509250925092565b80820281158282048414176108bd576108bd611005565b6020808252600a908201526909cdee840cadcdeeaced60b31b604082015260600190565b60006020828403121561137f57600080fd5b5051919050565b60006020828403121561139857600080fd5b8151610fae81611047565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b818110156113f2576020818501810151868301820152016113d6565b506000602082860101526020601f19601f83011685010191505092915050565b60e08152600061142660e083018c8e6113a3565b8281036020840152611439818b8d6113a3565b9050828103604084015261144e81898b6113a3565b6001600160a01b03881660608501526080840187905260a0840186905283810360c0850152905061147f81856113cc565b9d9c50505050505050505050505050565b602081526000610fae60208301846113cc565b634e487b7160e01b600052601260045260246000fdfea26469706673582212200c98f0f4b6193ca538d9c27d944796b2095aa65c29243ce19c963d6c6a662c3d64736f6c63430008120033";

type TheSourceMarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheSourceMarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheSourceMarketPlace__factory extends ContractFactory {
  constructor(...args: TheSourceMarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheSourceMarketPlace> {
    return super.deploy(overrides || {}) as Promise<TheSourceMarketPlace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TheSourceMarketPlace {
    return super.attach(address) as TheSourceMarketPlace;
  }
  override connect(signer: Signer): TheSourceMarketPlace__factory {
    return super.connect(signer) as TheSourceMarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheSourceMarketPlaceInterface {
    return new utils.Interface(_abi) as TheSourceMarketPlaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheSourceMarketPlace {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TheSourceMarketPlace;
  }
}
