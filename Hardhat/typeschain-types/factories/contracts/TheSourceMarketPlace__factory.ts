/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheSourceMarketPlace,
  TheSourceMarketPlaceInterface,
} from "../../contracts/TheSourceMarketPlace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "articleId",
        type: "uint256",
      },
    ],
    name: "createArticle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "deploy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "membershipPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "newArticlePrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "newMemberToken",
    type: "event",
  },
  {
    inputs: [],
    name: "articleContract",
    outputs: [
      {
        internalType: "contract TheSourceArticle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfMemberToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_articleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyArticle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyMemberToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getArticlePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMemberTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_memberTokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_memberTokenPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_articleContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_articlePrice",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "memberTokenContract",
    outputs: [
      {
        internalType: "contract TheSourceMemberToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_memberTokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_authorName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "URI",
        type: "string",
      },
    ],
    name: "mintArticle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "myBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setArticlePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBase",
        type: "string",
      },
    ],
    name: "setBaseURIMemberToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setMemberTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200003262000026620000ca60201b60201c565b620000d260201b60201c565b60018081905550620000556773c420c2413f6a1e60c01b6200019660201b60201c565b62000071674ecdd910d93371ce60c01b6200019660201b60201c565b6200008d67b5af00fe873780d860c01b6200019660201b60201c565b7fc7602316e8504bbb82f7a49bebb13e32bf604a536b0fe9d56aca482066af253b604051620000bc90620001fa565b60405180910390a16200021c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600082825260208201905092915050565b7f6465706c6f796d656e7400000000000000000000000000000000000000000000600082015250565b6000620001e2600a8362000199565b9150620001ef82620001aa565b602082019050919050565b600060208201905081810360008301526200021581620001d3565b9050919050565b612a94806200022c6000396000f3fe60806040526004361061010d5760003560e01c80638da5cb5b11610095578063c9116b6911610064578063c9116b69146103b8578063ce215c56146103e3578063f2fde38b1461040c578063f842feff14610435578063ff2b11901461046057610184565b80638da5cb5b1461030e57806395c95eb014610339578063ac9ce66e14610364578063af30d6b91461038f57610184565b80636aa5c352116100dc5780636aa5c3521461022f5780636eddd4931461025f57806370a082311461028a578063715018a6146102c757806378b7c66f146102de57610184565b806310599c16146101895780632e1a7d4d146101b25780634ed5d0c6146101db578063602bead51461020657610184565b36610184576101266776b0de33ae2d830b60c01b61046a565b346002600061013361046d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461017c9190611d2e565b925050819055005b600080fd5b34801561019557600080fd5b506101b060048036038101906101ab9190611da2565b610496565b005b3480156101be57600080fd5b506101d960048036038101906101d49190611da2565b610557565b005b3480156101e757600080fd5b506101f061089a565b6040516101fd9190611dde565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190611e57565b6108e0565b005b61024960048036038101906102449190611ebe565b610a0a565b6040516102569190611f19565b60405180910390f35b34801561026b57600080fd5b50610274610ef7565b6040516102819190611f93565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac9190611fae565b610f1d565b6040516102be9190611dde565b60405180910390f35b3480156102d357600080fd5b506102dc610fd2565b005b6102f860048036038101906102f39190612181565b610fe6565b6040516103059190611dde565b60405180910390f35b34801561031a57600080fd5b5061032361046d565b60405161033091906122af565b60405180910390f35b34801561034557600080fd5b5061034e6113d3565b60405161035b9190611dde565b60405180910390f35b34801561037057600080fd5b506103796114b2565b6040516103869190611dde565b60405180910390f35b34801561039b57600080fd5b506103b660048036038101906103b191906122ca565b6114f8565b005b3480156103c457600080fd5b506103cd6115f4565b6040516103da9190611dde565b60405180910390f35b3480156103ef57600080fd5b5061040a60048036038101906104059190611da2565b611677565b005b34801561041857600080fd5b50610433600480360381019061042e9190611fae565b611738565b005b34801561044157600080fd5b5061044a6118e7565b6040516104579190612334565b60405180910390f35b61046861190d565b005b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104aa679bd86b3f00db3d2660c01b61046a565b6104b2611b53565b6104c667484c2f2533f3b0b260c01b61046a565b6104da67d726f047bb6c4e6060c01b61046a565b6104ee675c3a29a972ff668460c01b61046a565b8060058190555061050967f4d044943dd2bee660c01b61046a565b61051d675305a6bb719c59dc60c01b61046a565b7f66d54ee5dfff9d1ed5d04b3a2f79d518d69956edbbb843cdcf4f816efb1120428160405161054c9190611dde565b60405180910390a150565b61056b67045378241c1ed39d60c01b61046a565b610573611bd1565b6105876740320d034c14cf2260c01b61046a565b61059b67266b7da5a800741260c01b61046a565b6105af67f9d1f120e8506bbb60c01b61046a565b6105c36717e01a048bdea42460c01b61046a565b6105d76751cd2a579edccd7b60c01b61046a565b6000811161061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610611906123ac565b60405180910390fd5b61062e67bce6e5cc9becec9260c01b61046a565b610642673d701a7afc5b65d960c01b61046a565b610656676c58f8f5e02d4f1460c01b61046a565b61066a673fbed2fc8b75cd7260c01b61046a565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e390612418565b60405180910390fd5b610700677b8547c6225484de60c01b61046a565b61071467982e563ede42e3e460c01b61046a565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107639190612438565b9250508190555061077e6793739fedb4bad4b760c01b61046a565b61079267979a7f438f9f356f60c01b61046a565b60003373ffffffffffffffffffffffffffffffffffffffff16826040516107b89061249d565b60006040518083038185875af1925050503d80600081146107f5576040519150601f19603f3d011682016040523d82523d6000602084013e6107fa565b606091505b505090506108126720aac95f3ee88a4460c01b61046a565b610826672b0a34df9e2f298660c01b61046a565b61083a67135f2e6af2800fd060c01b61046a565b8061087a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610871906124fe565b60405180910390fd5b61088e679998cd4ee0857f5560c01b61046a565b50610897611c20565b50565b60006108b06721368d41aca9d9a060c01b61046a565b6108c4677f65171e9a4741df60c01b61046a565b6108d867630a13c72757467460c01b61046a565b600554905090565b6108f46729337bcc2a5033c760c01b61046a565b6108fc611b53565b610910679d5338a83d31943660c01b61046a565b610924679686a84410f4588d60c01b61046a565b6109386728e651347df6e28060c01b61046a565b83600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061098d670db966c6133a258d60c01b61046a565b826005819055506109a867aa893940370c4e8d60c01b61046a565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109fd676105fb704ebd538160c01b61046a565b8060068190555050505050565b6000610a20671e6cdada035f270460c01b61046a565b610a3467c43e3b70cb6bb37a60c01b61046a565b610a4766c8b0fe94a61dd260c01b61046a565b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b0df9b83876040518263ffffffff1660e01b8152600401610aa79190611dde565b606060405180830381865afa158015610ac4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae89190612548565b925092509250610b02672ff7d1d4f4b0477760c01b61046a565b610b166729e7b2f895ed36f460c01b61046a565b610b2a67cefc70c0493c78fc60c01b61046a565b8482610b36919061259b565b341015610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90612629565b60405180910390fd5b610b8c6728656e794bcdfcc960c01b61046a565b610ba067a8a5e5e8ac7281c060c01b61046a565b610bb467889d939283a57ab660c01b61046a565b610bc86710ee8001d062569f60c01b61046a565b82851115610c0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0290612695565b60405180910390fd5b610c1f67f63c7b97cdb0f80160c01b61046a565b610c336793acd241e37fd8c760c01b61046a565b610c4767639d16b5f61bcf9b60c01b61046a565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e77300d3388886040518463ffffffff1660e01b8152600401610ca6939291906126b5565b600060405180830381600087803b158015610cc057600080fd5b505af1158015610cd4573d6000803e3d6000fd5b50505050610cec6790f7f0b970c6309060c01b61046a565b610d0067ec6dcbe4e520a82a60c01b61046a565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f053dc5c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9391906126ec565b9050610da967e77990efbc83ff4960c01b61046a565b610dbd671a4bc36fb4234f1d60c01b61046a565b60006103e88234610dce919061259b565b610dd89190612748565b9050610dee67eaa25de548a5efe260c01b61046a565b8034610dfa9190612438565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e489190611d2e565b92505081905550610e6367b836201e875bcf4660c01b61046a565b8060026000610e7061046d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eb99190611d2e565b92505081905550610ed467b75ffaa66c17d3d660c01b61046a565b610ee867a546300dfec051f960c01b61046a565b60019550505050505092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f3367b5c71250ea04e95b60c01b61046a565b610f3b611b53565b610f4f677df5e7cf1e1bd3c260c01b61046a565b610f636782a9704b2bd8ae8260c01b61046a565b610f77670a60cc44159de67d60c01b61046a565b610f8b6751e6d11b2cf5f08f60c01b61046a565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610fda611b53565b610fe46000611c29565b565b6000610ffc673cc8f668e279ea8b60c01b61046a565b6110106778016f3b69911bde60c01b61046a565b61102467669ade57aa10c5fe60c01b61046a565b611038673066a75d28b37d7260c01b61046a565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e8d6040518263ffffffff1660e01b81526004016110aa9190611dde565b602060405180830381865afa1580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb9190612779565b73ffffffffffffffffffffffffffffffffffffffff1614611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113890612818565b60405180910390fd5b61115567ae505b71f55c4a6360c01b61046a565b6111696724de257645d602b260c01b61046a565b61117d67ded1654b9046c8c160c01b61046a565b61119167f8ebdd9abe8b667e60c01b61046a565b6006543410156111d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cd90612629565b60405180910390fd5b6111ea679225a9104d204ced60c01b61046a565b6111fd6664e5749e46407860c01b61046a565b61121167fe1fdc09054cb67960c01b61046a565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f6b49df88c8c8c8c8c8c338d8d8d6040518b63ffffffff1660e01b81526004016112809a999897969594939291906128d3565b6020604051808303816000875af115801561129f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c391906126ec565b90506112d9673d9af25cb3ee9bba60c01b61046a565b34600260006112e661046d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461132f9190611d2e565b9250508190555061134a672f0415f1b34dc04160c01b61046a565b61135e676255b1a995400e7960c01b61046a565b7fdaf695c1b04d7651b51a60d7390d40e64840134c0943db129871d2ef48401a0b338d83604051611391939291906126b5565b60405180910390a16113ad67a02b9214211eedcd60c01b61046a565b6113c1670a885d6652655c2860c01b61046a565b809150509a9950505050505050505050565b60006113e9678b7bcee7293d5bf560c01b61046a565b6113fd67f87f9a0846ce8b4360c01b61046a565b6114116742c0680991590b4d60c01b61046a565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161146c91906122af565b602060405180830381865afa158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ad91906126ec565b905090565b60006114c867baeefc89e949905260c01b61046a565b6114dc67fa8e4e9cff93e23660c01b61046a565b6114f067ed33982faed9a44f60c01b61046a565b600654905090565b61150c67e3b27affce51663a60c01b61046a565b611514611b53565b61152867ec5b19367fe915f360c01b61046a565b61153c6772fe9a38328e0a5e60c01b61046a565b61155067565378c45453c7b560c01b61046a565b61156467e6c526ef7289f97b60c01b61046a565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166355f804b3826040518263ffffffff1660e01b81526004016115bf9190612964565b600060405180830381600087803b1580156115d957600080fd5b505af11580156115ed573d6000803e3d6000fd5b5050505050565b600061160a67b2b7fc53ee2fd98d60c01b61046a565b61161e67082110597a40429760c01b61046a565b61163267ae06f6f6709f264d60c01b61046a565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b61168b67c93682f11b76581860c01b61046a565b611693611b53565b6116a7672c1a3a5ca4b8393c60c01b61046a565b6116bb672c5126b1b4a0e6b060c01b61046a565b6116cf6761757acb432354a560c01b61046a565b806006819055506116ea67e106cc89b6d5757360c01b61046a565b6116fe67a3d2c931ee85e12660c01b61046a565b7fe27a05367ae9096f97930b7212cac84e666eff0b4327729d27775049d2451db18160405161172d9190611dde565b60405180910390a150565b61174c672e11a36ac1f5cec760c01b61046a565b611754611b53565b61176867f587bd99853f54a160c01b61046a565b61177c67ab9d66100fbf523760c01b61046a565b61179067c2f85cccada8ba4460c01b61046a565b6117a467d4f3b1b7fef6c8d660c01b61046a565b60006117ae61046d565b90506117c467863bfde186c0a78d60c01b61046a565b6117d8675d0072a8842405d960c01b61046a565b6117e182611c29565b6117f567cb7fc67fd3010beb60c01b61046a565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118839190611d2e565b9250508190555061189e67b5f471ab5513501560c01b61046a565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61192167efeb2c758bf7014460c01b61046a565b611935673aa05f5b6b10faeb60c01b61046a565b6119496783be7f38da1723ec60c01b61046a565b61195d67ed414e3bff38e9f560c01b61046a565b6005543410156119a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199990612629565b60405180910390fd5b6119b667079cb2a8651ad37760c01b61046a565b6119ca67ed21070d50ed7c5f60c01b61046a565b6119de674327a9a51040120260c01b61046a565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340d097c3336040518263ffffffff1660e01b8152600401611a3b91906122af565b6020604051808303816000875af1158015611a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7e91906126ec565b9050611a9467d1735420d70fa90c60c01b61046a565b3460026000611aa161046d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611aea9190611d2e565b92505081905550611b0567e38f5b9b09bdd34160c01b61046a565b611b19672e300c0e1911762660c01b61046a565b7f83aaf6db56a1fb9f4570edcf2a4e72e264fa4534005affd856388c185f71b9ad81604051611b489190611dde565b60405180910390a150565b611b5b611ced565b73ffffffffffffffffffffffffffffffffffffffff16611b7961046d565b73ffffffffffffffffffffffffffffffffffffffff1614611bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc6906129d2565b60405180910390fd5b565b600260015403611c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0d90612a3e565b60405180910390fd5b6002600181905550565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d3982611cf5565b9150611d4483611cf5565b9250828201905080821115611d5c57611d5b611cff565b5b92915050565b6000604051905090565b600080fd5b600080fd5b611d7f81611cf5565b8114611d8a57600080fd5b50565b600081359050611d9c81611d76565b92915050565b600060208284031215611db857611db7611d6c565b5b6000611dc684828501611d8d565b91505092915050565b611dd881611cf5565b82525050565b6000602082019050611df36000830184611dcf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e2482611df9565b9050919050565b611e3481611e19565b8114611e3f57600080fd5b50565b600081359050611e5181611e2b565b92915050565b60008060008060808587031215611e7157611e70611d6c565b5b6000611e7f87828801611e42565b9450506020611e9087828801611d8d565b9350506040611ea187828801611e42565b9250506060611eb287828801611d8d565b91505092959194509250565b60008060408385031215611ed557611ed4611d6c565b5b6000611ee385828601611d8d565b9250506020611ef485828601611d8d565b9150509250929050565b60008115159050919050565b611f1381611efe565b82525050565b6000602082019050611f2e6000830184611f0a565b92915050565b6000819050919050565b6000611f59611f54611f4f84611df9565b611f34565b611df9565b9050919050565b6000611f6b82611f3e565b9050919050565b6000611f7d82611f60565b9050919050565b611f8d81611f72565b82525050565b6000602082019050611fa86000830184611f84565b92915050565b600060208284031215611fc457611fc3611d6c565b5b6000611fd284828501611e42565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261200057611fff611fdb565b5b8235905067ffffffffffffffff81111561201d5761201c611fe0565b5b60208301915083600182028301111561203957612038611fe5565b5b9250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61208e82612045565b810181811067ffffffffffffffff821117156120ad576120ac612056565b5b80604052505050565b60006120c0611d62565b90506120cc8282612085565b919050565b600067ffffffffffffffff8211156120ec576120eb612056565b5b6120f582612045565b9050602081019050919050565b82818337600083830152505050565b600061212461211f846120d1565b6120b6565b9050828152602081018484840111156121405761213f612040565b5b61214b848285612102565b509392505050565b600082601f83011261216857612167611fdb565b5b8135612178848260208601612111565b91505092915050565b60008060008060008060008060008060e08b8d0312156121a4576121a3611d6c565b5b60006121b28d828e01611d8d565b9a505060208b013567ffffffffffffffff8111156121d3576121d2611d71565b5b6121df8d828e01611fea565b995099505060408b013567ffffffffffffffff81111561220257612201611d71565b5b61220e8d828e01611fea565b975097505060608b013567ffffffffffffffff81111561223157612230611d71565b5b61223d8d828e01611fea565b955095505060806122508d828e01611d8d565b93505060a06122618d828e01611d8d565b92505060c08b013567ffffffffffffffff81111561228257612281611d71565b5b61228e8d828e01612153565b9150509295989b9194979a5092959850565b6122a981611e19565b82525050565b60006020820190506122c460008301846122a0565b92915050565b6000602082840312156122e0576122df611d6c565b5b600082013567ffffffffffffffff8111156122fe576122fd611d71565b5b61230a84828501612153565b91505092915050565b600061231e82611f60565b9050919050565b61232e81612313565b82525050565b60006020820190506123496000830184612325565b92915050565b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b600061239660208361234f565b91506123a182612360565b602082019050919050565b600060208201905081810360008301526123c581612389565b9050919050565b7f496e73756666696369656e742062616c616e636520696e20636f6e7472616374600082015250565b600061240260208361234f565b915061240d826123cc565b602082019050919050565b60006020820190508181036000830152612431816123f5565b9050919050565b600061244382611cf5565b915061244e83611cf5565b925082820390508181111561246657612465611cff565b5b92915050565b600081905092915050565b50565b600061248760008361246c565b915061249282612477565b600082019050919050565b60006124a88261247a565b9150819050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006124e860108361234f565b91506124f3826124b2565b602082019050919050565b60006020820190508181036000830152612517816124db565b9050919050565b60008151905061252d81611d76565b92915050565b60008151905061254281611e2b565b92915050565b60008060006060848603121561256157612560611d6c565b5b600061256f8682870161251e565b93505060206125808682870161251e565b925050604061259186828701612533565b9150509250925092565b60006125a682611cf5565b91506125b183611cf5565b92508282026125bf81611cf5565b915082820484148315176125d6576125d5611cff565b5b5092915050565b7f4e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b6000612613600a8361234f565b915061261e826125dd565b602082019050919050565b6000602082019050818103600083015261264281612606565b9050919050565b7f4e6f7420656e6f75676820737570706c79000000000000000000000000000000600082015250565b600061267f60118361234f565b915061268a82612649565b602082019050919050565b600060208201905081810360008301526126ae81612672565b9050919050565b60006060820190506126ca60008301866122a0565b6126d76020830185611dcf565b6126e46040830184611dcf565b949350505050565b60006020828403121561270257612701611d6c565b5b60006127108482850161251e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061275382611cf5565b915061275e83611cf5565b92508261276e5761276d612719565b5b828204905092915050565b60006020828403121561278f5761278e611d6c565b5b600061279d84828501612533565b91505092915050565b7f446f6e27742068617665206163636573732c20627579206f72206368616e676560008201527f204d656d626572546f6b656e0000000000000000000000000000000000000000602082015250565b6000612802602c8361234f565b915061280d826127a6565b604082019050919050565b60006020820190508181036000830152612831816127f5565b9050919050565b6000612844838561234f565b9350612851838584612102565b61285a83612045565b840190509392505050565b600081519050919050565b60005b8381101561288e578082015181840152602081019050612873565b60008484015250505050565b60006128a582612865565b6128af818561234f565b93506128bf818560208601612870565b6128c881612045565b840191505092915050565b600060e08201905081810360008301526128ee818c8e612838565b90508181036020830152612903818a8c612838565b9050818103604083015261291881888a612838565b905061292760608301876122a0565b6129346080830186611dcf565b61294160a0830185611dcf565b81810360c0830152612953818461289a565b90509b9a5050505050505050505050565b6000602082019050818103600083015261297e818461289a565b905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006129bc60208361234f565b91506129c782612986565b602082019050919050565b600060208201905081810360008301526129eb816129af565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612a28601f8361234f565b9150612a33826129f2565b602082019050919050565b60006020820190508181036000830152612a5781612a1b565b905091905056fea26469706673582212201e8de7940d4fc701a65c96dc26ac10fc9a018412b5cd8cdaa7ea723e994234c664736f6c63430008120033";

type TheSourceMarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheSourceMarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheSourceMarketPlace__factory extends ContractFactory {
  constructor(...args: TheSourceMarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheSourceMarketPlace> {
    return super.deploy(overrides || {}) as Promise<TheSourceMarketPlace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TheSourceMarketPlace {
    return super.attach(address) as TheSourceMarketPlace;
  }
  override connect(signer: Signer): TheSourceMarketPlace__factory {
    return super.connect(signer) as TheSourceMarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheSourceMarketPlaceInterface {
    return new utils.Interface(_abi) as TheSourceMarketPlaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheSourceMarketPlace {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TheSourceMarketPlace;
  }
}
