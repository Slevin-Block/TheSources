/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheSourceMemberToken,
  TheSourceMemberTokenInterface,
} from "../../contracts/TheSourceMemberToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketPlaceAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalties",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfMemberToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalties",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cee38038062001cee833981016040819052620000349162000215565b6040518060400160405280601481526020017f546865536f757263654d656d627265546f6b656e000000000000000000000000815250604051806040016040528060048152602001631514d35560e21b8152508160009081620000989190620002f6565b506001620000a78282620002f6565b505050620000c4620000be620000de60201b60201c565b620000e2565b620000cf8262000134565b60095550601e600a55620003c2565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200013e620001b7565b6001600160a01b038116620001a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620001b481620000e2565b50565b6007546001600160a01b03163314620002135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620001a0565b565b600080604083850312156200022957600080fd5b82516001600160a01b03811681146200024157600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027c57607f821691505b6020821081036200029d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f157600081815260208120601f850160051c81016020861015620002cc5750805b601f850160051c820191505b81811015620002ed57828155600101620002d8565b5050505b505050565b81516001600160401b0381111562000312576200031262000251565b6200032a8162000323845462000267565b84620002a3565b602080601f831160018114620003625760008415620003495750858301515b600019600386901b1c1916600185901b178555620002ed565b600085815260208120601f198616915b82811015620003935788860151825594840194600190910190840162000372565b5085821015620003b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61191c80620003d26000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b8578063a22cb4651161007c578063a22cb4651461026b578063b88d4fde1461027e578063c87b56dd14610291578063e985e9c5146102a4578063f053dc5c146102e0578063f2fde38b146102e957600080fd5b80636352211e1461022457806370a0823114610237578063715018a61461024a5780638da5cb5b1461025257806395d89b411461026357600080fd5b806323b872dd116100ff57806323b872dd146101d057806340d097c3146101e357806342842e0e146101f657806355f804b3146102095780635fad46661461021c57600080fd5b806301ffc9a71461013c578063047fc9aa1461016457806306fdde031461017b578063081812fc14610190578063095ea7b3146101bb575b600080fd5b61014f61014a366004611317565b6102fc565b60405190151581526020015b60405180910390f35b61016d600a5481565b60405190815260200161015b565b61018361034e565b60405161015b9190611384565b6101a361019e366004611397565b6103e0565b6040516001600160a01b03909116815260200161015b565b6101ce6101c93660046113c7565b610407565b005b6101ce6101de3660046113f1565b610521565b61016d6101f136600461142d565b610552565b6101ce6102043660046113f1565b61064d565b6101ce6102173660046114d4565b610668565b61016d610680565b6101a3610232366004611397565b610690565b61016d61024536600461142d565b6106f0565b6101ce610776565b6007546001600160a01b03166101a3565b61018361078a565b6101ce61027936600461151d565b610799565b6101ce61028c366004611559565b6107a4565b61018361029f366004611397565b6107dc565b61014f6102b23660046115d5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61016d60095481565b6101ce6102f736600461142d565b6108df565b60006001600160e01b031982166380ac58cd60e01b148061032d57506001600160e01b03198216635b5e139f60e01b145b8061034857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461035d90611608565b80601f016020809104026020016040519081016040528092919081815260200182805461038990611608565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050905090565b60006103eb82610958565b506000908152600460205260409020546001600160a01b031690565b600061041282610690565b9050806001600160a01b0316836001600160a01b0316036104845760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104a057506104a081336102b2565b6105125760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161047b565b61051c83836109b7565b505050565b61052b3382610a25565b6105475760405162461bcd60e51b815260040161047b90611642565b61051c838383610aa3565b600061055c610c07565b600a54600854106105a75760405162461bcd60e51b8152602060048201526015602482015274457665727920746f6b656e73206d696e746564202160581b604482015260640161047b565b6105b5600880546001019055565b60006105c060085490565b90506105cc8382610c61565b60006105d782610c7b565b6040516020016105e7919061168f565b60405160208183030381529060405290506106028282610d0e565b604080516001600160a01b0386168152602081018490527f40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f2842910160405180910390a15090505b919050565b61051c838383604051806020016040528060008152506107a4565b610670610c07565b600b61067c8282611706565b5050565b600061068b60085490565b905090565b6000818152600260205260408120546001600160a01b0316806103485760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161047b565b60006001600160a01b03821661075a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161047b565b506001600160a01b031660009081526003602052604090205490565b61077e610c07565b6107886000610da1565b565b60606001805461035d90611608565b61067c338383610df3565b6107ae3383610a25565b6107ca5760405162461bcd60e51b815260040161047b90611642565b6107d684848484610ec1565b50505050565b60606107e782610958565b6000828152600660205260408120805461080090611608565b80601f016020809104026020016040519081016040528092919081815260200182805461082c90611608565b80156108795780601f1061084e57610100808354040283529160200191610879565b820191906000526020600020905b81548152906001019060200180831161085c57829003601f168201915b50505050509050600061088a610ef4565b9050805160000361089c575092915050565b8151156108ce5780826040516020016108b69291906117c6565b60405160208183030381529060405292505050919050565b6108d784610f03565b949350505050565b6108e7610c07565b6001600160a01b03811661094c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047b565b61095581610da1565b50565b6000818152600260205260409020546001600160a01b03166109555760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161047b565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109ec82610690565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a3183610690565b9050806001600160a01b0316846001600160a01b03161480610a7857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108d75750836001600160a01b0316610a91846103e0565b6001600160a01b031614949350505050565b826001600160a01b0316610ab682610690565b6001600160a01b031614610adc5760405162461bcd60e51b815260040161047b906117f5565b6001600160a01b038216610b3e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161047b565b826001600160a01b0316610b5182610690565b6001600160a01b031614610b775760405162461bcd60e51b815260040161047b906117f5565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b031633146107885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047b565b61067c828260405180602001604052806000815250610f6a565b60606000610c8883610f9d565b600101905060008167ffffffffffffffff811115610ca857610ca8611448565b6040519080825280601f01601f191660200182016040528015610cd2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cdc57509392505050565b6000828152600260205260409020546001600160a01b0316610d895760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161047b565b600082815260066020526040902061051c8282611706565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e545760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161047b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ecc848484610aa3565b610ed884848484611075565b6107d65760405162461bcd60e51b815260040161047b9061183a565b6060600b805461035d90611608565b6060610f0e82610958565b6000610f18610ef4565b90506000815111610f385760405180602001604052806000815250610f63565b80610f4284610c7b565b604051602001610f539291906117c6565b6040516020818303038152906040525b9392505050565b610f748383611176565b610f816000848484611075565b61051c5760405162461bcd60e51b815260040161047b9061183a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610fdc5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611008576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061102657662386f26fc10000830492506010015b6305f5e100831061103e576305f5e100830492506008015b612710831061105257612710830492506004015b60648310611064576064830492506002015b600a83106103485760010192915050565b60006001600160a01b0384163b1561116b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110b990339089908890889060040161188c565b6020604051808303816000875af19250505080156110f4575060408051601f3d908101601f191682019092526110f1918101906118c9565b60015b611151573d808015611122576040519150601f19603f3d011682016040523d82523d6000602084013e611127565b606091505b5080516000036111495760405162461bcd60e51b815260040161047b9061183a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108d7565b506001949350505050565b6001600160a01b0382166111cc5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161047b565b6000818152600260205260409020546001600160a01b0316156112315760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161047b565b6000818152600260205260409020546001600160a01b0316156112965760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161047b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461095557600080fd5b60006020828403121561132957600080fd5b8135610f6381611301565b60005b8381101561134f578181015183820152602001611337565b50506000910152565b60008151808452611370816020860160208601611334565b601f01601f19169290920160200192915050565b602081526000610f636020830184611358565b6000602082840312156113a957600080fd5b5035919050565b80356001600160a01b038116811461064857600080fd5b600080604083850312156113da57600080fd5b6113e3836113b0565b946020939093013593505050565b60008060006060848603121561140657600080fd5b61140f846113b0565b925061141d602085016113b0565b9150604084013590509250925092565b60006020828403121561143f57600080fd5b610f63826113b0565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561147957611479611448565b604051601f8501601f19908116603f011681019082821181831017156114a1576114a1611448565b816040528093508581528686860111156114ba57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156114e657600080fd5b813567ffffffffffffffff8111156114fd57600080fd5b8201601f8101841361150e57600080fd5b6108d78482356020840161145e565b6000806040838503121561153057600080fd5b611539836113b0565b91506020830135801515811461154e57600080fd5b809150509250929050565b6000806000806080858703121561156f57600080fd5b611578856113b0565b9350611586602086016113b0565b925060408501359150606085013567ffffffffffffffff8111156115a957600080fd5b8501601f810187136115ba57600080fd5b6115c98782356020840161145e565b91505092959194509250565b600080604083850312156115e857600080fd5b6115f1836113b0565b91506115ff602084016113b0565b90509250929050565b600181811c9082168061161c57607f821691505b60208210810361163c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600082516116a1818460208701611334565b64173539b7b760d91b920191825250600501919050565b601f82111561051c57600081815260208120601f850160051c810160208610156116df5750805b601f850160051c820191505b818110156116fe578281556001016116eb565b505050505050565b815167ffffffffffffffff81111561172057611720611448565b6117348161172e8454611608565b846116b8565b602080601f83116001811461176957600084156117515750858301515b600019600386901b1c1916600185901b1785556116fe565b600085815260208120601f198616915b8281101561179857888601518255948401946001909101908401611779565b50858210156117b65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600083516117d8818460208801611334565b8351908301906117ec818360208801611334565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118bf90830184611358565b9695505050505050565b6000602082840312156118db57600080fd5b8151610f638161130156fea2646970667358221220f787f5f5f8c00252a0f3ce8d2e852a85930fda77f506c1f2c3ac84c5034b989a64736f6c63430008120033";

type TheSourceMemberTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheSourceMemberTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheSourceMemberToken__factory extends ContractFactory {
  constructor(...args: TheSourceMemberTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketPlaceAddr: PromiseOrValue<string>,
    _royalties: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheSourceMemberToken> {
    return super.deploy(
      _marketPlaceAddr,
      _royalties,
      overrides || {}
    ) as Promise<TheSourceMemberToken>;
  }
  override getDeployTransaction(
    _marketPlaceAddr: PromiseOrValue<string>,
    _royalties: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketPlaceAddr,
      _royalties,
      overrides || {}
    );
  }
  override attach(address: string): TheSourceMemberToken {
    return super.attach(address) as TheSourceMemberToken;
  }
  override connect(signer: Signer): TheSourceMemberToken__factory {
    return super.connect(signer) as TheSourceMemberToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheSourceMemberTokenInterface {
    return new utils.Interface(_abi) as TheSourceMemberTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheSourceMemberToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TheSourceMemberToken;
  }
}
